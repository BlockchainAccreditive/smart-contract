{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDeployERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "testDeployERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "bytecode1",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "bytecode2",
          "type": "bytes"
        }
      ],
      "name": "testFailDoubleDeployDifferentBytecode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFailDoubleDeployDifferentBytecode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFailDoubleDeploySameBytecode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "bytecode",
          "type": "bytes"
        }
      ],
      "name": "testFailDoubleDeploySameBytecode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff1916600190811790915560025534801561002357600080fd5b506145fe806100336000396000f3fe60806040523480156200001157600080fd5b5060043610620000935760003560e01c80637d94263711620000625780637d94263714620000dc5780639258e48914620000f3578063ba414fa614620000fd578063fa7626d4146200011b57600080fd5b806307841bd414620000985780632f5ba3b014620000a45780633dbcbb7314620000bb5780634609fe1414620000c5575b600080fd5b620000a262000129565b005b620000a2620000b53660046200140e565b620001ea565b620000a262000277565b620000a2620000d6366004620014a2565b62000629565b620000a2620000ed36600462001537565b620008d5565b620000a262000960565b62000107620009cc565b604051901515815260200160405180910390f35b600054620001079060ff1681565b604080518082018252600881527f53616c74792e2e2e00000000000000000000000000000000000000000000000060209182015290517f7b8edd48646503e35ad861b89c211c3d2d8489e9bd92b4ca33550889f88af86391620001ce9183916200019590820162001398565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f90910116604052600062000b36565b50620001e68160405180602001620001959062001398565b5050565b6200022c8585858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250925062000b36915050565b506200026f8583838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250925062000b36915050565b505050505050565b604080518082018252600781527f412073616c74210000000000000000000000000000000000000000000000000060209182015290517ff66d1c49a6c3a2a06c177c5523de9d8ab86d28aa5e2333d2e48b853e7e28a4a791600091620003e891849190620002e7908201620013a6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f909101166040818152606060208301819052600a60808401527f4d6f636b20546f6b656e0000000000000000000000000000000000000000000060a08085019190915291830191909152600460c08301527f4d4f434b0000000000000000000000000000000000000000000000000000000060e0830152601290820152610100015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052620003d19291602001620015b6565b604051602081830303815290604052600062000b36565b90506200040081620003fa8462000d17565b62000e87565b620004d48173ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000450573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405262000498919081019062001618565b6040518060400160405280600a81526020017f4d6f636b20546f6b656e0000000000000000000000000000000000000000000081525062000fc5565b620005a88173ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000524573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526200056c919081019062001618565b6040518060400160405280600481526020017f4d4f434b0000000000000000000000000000000000000000000000000000000081525062000fc5565b620001e68173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620005f8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200061e9190620016ef565b60ff16601262001115565b60006200068d87604051806020016200064290620013a6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f90910116604081905262000393908a908a908a908a908a9060200162001758565b90506200069f81620003fa8962000d17565b620007748173ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015620006ef573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405262000737919081019062001618565b87878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525062000fc592505050565b620008498173ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620007c4573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526200080c919081019062001618565b85858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525062000fc592505050565b620008cc8173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000899573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008bf9190620016ef565b60ff168360ff1662001115565b50505050505050565b620009178383838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250925062000b36915050565b506200095a8383838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250925062000b36915050565b50505050565b604080518082018252600a81527f616e64207377656574210000000000000000000000000000000000000000000060209182015290517f1096b45157de7fd9778d004fe5b7230de32adf74d933fd7e6f3ac6d6d819dae791620001ce91839162000195908201620013b4565b60008054610100900460ff1615620009ed5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000b315760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000008284015282518083038401815260608301909352600092909162000a95917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001799565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905262000acf91620017e3565b6000604051808303816000865af19150503d806000811462000b0e576040519150601f19603f3d011682016040523d82523d6000602084013e62000b13565b606091505b509150508080602001905181019062000b2d919062001801565b9150505b919050565b6000806040518060400160405280601081526020017f67363d3d37363d34f03d5260086018f30000000000000000000000000000000081525090506000858251602084016000f5905073ffffffffffffffffffffffffffffffffffffffff811662000c02576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4445504c4f594d454e545f4641494c454400000000000000000000000000000060448201526064015b60405180910390fd5b62000c0d8662000d17565b925060008173ffffffffffffffffffffffffffffffffffffffff16858760405162000c399190620017e3565b60006040518083038185875af1925050503d806000811462000c78576040519150601f19603f3d011682016040523d82523d6000602084013e62000c7d565b606091505b5050905080801562000ca5575073ffffffffffffffffffffffffffffffffffffffff84163b15155b62000d0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f494e495449414c495a4154494f4e5f4641494c45440000000000000000000000604482015260640162000bf9565b5050509392505050565b604080518082018252601081527f67363d3d37363d34f03d5260086018f30000000000000000000000000000000060209182015290517fff00000000000000000000000000000000000000000000000000000000000000918101919091527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b166021820152603581018290527f21c35dbe1b344a2488cf3321d6ce542f8e9f305544ff09e4993a62319a497c1f6055820152600090819062000df4906075015b6040516020818303038152906040528051906020012090565b6040517fd69400000000000000000000000000000000000000000000000000000000000060208201527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606083901b1660228201527f0100000000000000000000000000000000000000000000000000000000000000603682015290915062000e809060370162000ddb565b9392505050565b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614620001e6577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000f419060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b61646460408201527f726573735d000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162000f7a919062001825565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405162000fb3919062001887565b60405180910390a1620001e662001215565b8060405160200162000fd89190620017e3565b6040516020818303038152906040528051906020012082604051602001620010019190620017e3565b6040516020818303038152906040528051906020012014620001e6577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620010a39060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b73747260408201527f696e675d00000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051620010dc919062001911565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838260405162000fb391906200196b565b808214620001e6577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620011a39060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e60408201527f745d000000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051620011dc9190620019a9565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162000fb39190620019f5565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200136a5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052620012e7929160200162001799565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526200132191620017e3565b6000604051808303816000865af19150503d806000811462001360576040519150601f19603f3d011682016040523d82523d6000602084013e62001365565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b6106b08062001a3483390190565b61124080620020e483390190565b6112ce806200332483390190565b60008083601f840112620013d557600080fd5b50813567ffffffffffffffff811115620013ee57600080fd5b6020830191508360208285010111156200140757600080fd5b9250929050565b6000806000806000606086880312156200142757600080fd5b85359450602086013567ffffffffffffffff808211156200144757600080fd5b6200145589838a01620013c2565b909650945060408801359150808211156200146f57600080fd5b506200147e88828901620013c2565b969995985093965092949392505050565b60ff811681146200149f57600080fd5b50565b60008060008060008060808789031215620014bc57600080fd5b86359550602087013567ffffffffffffffff80821115620014dc57600080fd5b620014ea8a838b01620013c2565b909750955060408901359150808211156200150457600080fd5b506200151389828a01620013c2565b909450925050606087013562001529816200148f565b809150509295509295509295565b6000806000604084860312156200154d57600080fd5b83359250602084013567ffffffffffffffff8111156200156c57600080fd5b6200157a86828701620013c2565b9497909650939450505050565b60005b83811015620015a45781810151838201526020016200158a565b838111156200095a5750506000910152565b60008351620015ca81846020880162001587565b835190830190620015e081836020880162001587565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156200162b57600080fd5b815167ffffffffffffffff808211156200164457600080fd5b818401915084601f8301126200165957600080fd5b8151818111156200166e576200166e620015e9565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715620016b757620016b7620015e9565b81604052828152876020848701011115620016d157600080fd5b620016e483602083016020880162001587565b979650505050505050565b6000602082840312156200170257600080fd5b815162000e80816200148f565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6060815260006200176e6060830187896200170f565b8281036020840152620017838186886200170f565b91505060ff831660408301529695505050505050565b7fffffffff000000000000000000000000000000000000000000000000000000008316815260008251620017d581600485016020870162001587565b919091016004019392505050565b60008251620017f781846020870162001587565b9190910192915050565b6000602082840312156200181457600080fd5b8151801515811462000e8057600080fd5b6040815260006200186360408301600a81527f2020457870656374656400000000000000000000000000000000000000000000602082015260400190565b905073ffffffffffffffffffffffffffffffffffffffff8316602083015292915050565b6040815260006200186360408301600a81527f2020202041637475616c00000000000000000000000000000000000000000000602082015260400190565b60008151808452620018df81602086016020860162001587565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6040815260006200194f60408301600a81527f2020457870656374656400000000000000000000000000000000000000000000602082015260400190565b8281036020840152620019638185620018c5565b949350505050565b6040815260006200194f60408301600a81527f2020202041637475616c00000000000000000000000000000000000000000000602082015260400190565b604081526000620019e760408301600a81527f2020457870656374656400000000000000000000000000000000000000000000602082015260400190565b905082602083015292915050565b604081526000620019e760408301600a81527f2020202041637475616c0000000000000000000000000000000000000000000060208201526040019056fe608060405234801561001057600080fd5b5060008054336001600160a01b03199182168117835560018054909216909155604051909190829081907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908490a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a3505061060a806100a66000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063890eba6811610050578063890eba68146100a75780638da5cb5b146100e1578063bf7e214f1461012657600080fd5b806313af4035146100775780633a7104d11461008c5780637a9e5e4b14610094575b600080fd5b61008a6100853660046105b7565b610146565b005b61008a61024f565b61008a6100a23660046105b7565b610324565b6001546100cc9074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020015b60405180910390f35b6000546101019073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100d8565b6001546101019073ffffffffffffffffffffffffffffffffffffffff1681565b610174336000357fffffffff0000000000000000000000000000000000000000000000000000000016610481565b6101df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b61027d336000357fffffffff0000000000000000000000000000000000000000000000000000000016610481565b6102e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016101d6565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633148061040757506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa1580156103e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040791906105db565b61041057600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b60015460009073ffffffffffffffffffffffffffffffffffffffff16801580159061056557506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015610541573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056591906105db565b8061058a575060005473ffffffffffffffffffffffffffffffffffffffff8581169116145b949350505050565b73ffffffffffffffffffffffffffffffffffffffff811681146105b457600080fd5b50565b6000602082840312156105c957600080fd5b81356105d481610592565b9392505050565b6000602082840312156105ed57600080fd5b815180151581146105d457600080fdfea164736f6c634300080f000a60e06040523480156200001157600080fd5b5060405162001240380380620012408339810160408190526200003491620001e3565b8282826000620000458482620002f7565b506001620000548382620002f7565b5060ff81166080524660a0526200006a6200007a565b60c0525062000441945050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000ae9190620003c3565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013e57600080fd5b81516001600160401b03808211156200015b576200015b62000116565b604051601f8301601f19908116603f0116810190828211818310171562000186576200018662000116565b81604052838152602092508683858801011115620001a357600080fd5b600091505b83821015620001c75785820183015181830184015290820190620001a8565b83821115620001d95760008385830101525b9695505050505050565b600080600060608486031215620001f957600080fd5b83516001600160401b03808211156200021157600080fd5b6200021f878388016200012c565b945060208601519150808211156200023657600080fd5b5062000245868287016200012c565b925050604084015160ff811681146200025d57600080fd5b809150509250925092565b600181811c908216806200027d57607f821691505b6020821081036200029e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002f257600081815260208120601f850160051c81016020861015620002cd5750805b601f850160051c820191505b81811015620002ee57828155600101620002d9565b5050505b505050565b81516001600160401b0381111562000313576200031362000116565b6200032b8162000324845462000268565b84620002a4565b602080601f8311600181146200036357600084156200034a5750858301515b600019600386901b1c1916600185901b178555620002ee565b600085815260208120601f198616915b82811015620003945788860151825594840194600190910190840162000373565b5085821015620003b35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620003d38162000268565b60018281168015620003ee5760018114620004045762000435565b60ff198416875282151583028701945062000435565b8760005260208060002060005b858110156200042c5781548a82015290840190820162000411565b50505082870194505b50929695505050505050565b60805160a05160c051610dcf6200047160003960006104e0015260006104ab0152600061015f0152610dcf6000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c5780639dc29fac116100665780639dc29fac146101f8578063a9059cbb1461020b578063d505accf1461021e578063dd62ed3e1461023157600080fd5b806370a08231146101b05780637ecebe00146101d057806395d89b41146101f057600080fd5b806323b872dd116100c857806323b872dd14610147578063313ce5671461015a5780633644e5151461019357806340c10f191461019b57600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761025c565b6040516101049190610a71565b60405180910390f35b61012061011b366004610b0d565b6102ea565b6040519015158152602001610104565b61013960025481565b604051908152602001610104565b610120610155366004610b37565b610363565b6101817f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610104565b6101396104a7565b6101ae6101a9366004610b0d565b610502565b005b6101396101be366004610b73565b60036020526000908152604090205481565b6101396101de366004610b73565b60056020526000908152604090205481565b6100f7610510565b6101ae610206366004610b0d565b61051d565b610120610219366004610b0d565b610527565b6101ae61022c366004610b95565b6105ac565b61013961023f366004610c08565b600460209081526000928352604080842090915290825290205481565b6000805461026990610c3b565b80601f016020809104026020016040519081016040528092919081815260200182805461029590610c3b565b80156102e25780601f106102b7576101008083540402835291602001916102e2565b820191906000526020600020905b8154815290600101906020018083116102c557829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103529086815260200190565b60405180910390a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146103f7576103c58382610cbd565b73ffffffffffffffffffffffffffffffffffffffff861660009081526004602090815260408083203384529091529020555b73ffffffffffffffffffffffffffffffffffffffff85166000908152600360205260408120805485929061042c908490610cbd565b909155505073ffffffffffffffffffffffffffffffffffffffff808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104949087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146104dd576104d86108d0565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b61050c828261096a565b5050565b6001805461026990610c3b565b61050c82826109e3565b33600090815260036020526040812080548391908390610548908490610cbd565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103529086815260200190565b4284101561061b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b600060016106276104a7565b73ffffffffffffffffffffffffffffffffffffffff8a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e0830190915280519201919091207f190100000000000000000000000000000000000000000000000000000000000061010083015261010282019290925261012281019190915261014201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610779573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116158015906107f457508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b61085a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e45520000000000000000000000000000000000006044820152606401610612565b73ffffffffffffffffffffffffffffffffffffffff90811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516109029190610cd4565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b806002600082825461097c9190610daa565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604081208054839290610a18908490610cbd565b909155505060028054829003905560405181815260009073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016109d7565b600060208083528351808285015260005b81811015610a9e57858101830151858201604001528201610a82565b81811115610ab0576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610b0857600080fd5b919050565b60008060408385031215610b2057600080fd5b610b2983610ae4565b946020939093013593505050565b600080600060608486031215610b4c57600080fd5b610b5584610ae4565b9250610b6360208501610ae4565b9150604084013590509250925092565b600060208284031215610b8557600080fd5b610b8e82610ae4565b9392505050565b600080600080600080600060e0888a031215610bb057600080fd5b610bb988610ae4565b9650610bc760208901610ae4565b95506040880135945060608801359350608088013560ff81168114610beb57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610c1b57600080fd5b610c2483610ae4565b9150610c3260208401610ae4565b90509250929050565b600181811c90821680610c4f57607f821691505b602082108103610c88577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610ccf57610ccf610c8e565b500390565b600080835481600182811c915080831680610cf057607f831692505b60208084108203610d28577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b818015610d3c5760018114610d6f57610d9c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952841515850289019650610d9c565b60008a81526020902060005b86811015610d945781548b820152908501908301610d7b565b505084890196505b509498975050505050505050565b60008219821115610dbd57610dbd610c8e565b50019056fea164736f6c634300080f000a60e06040523480156200001157600080fd5b506040518060400160405280600d81526020016c2bb930b83832b21022ba3432b960991b815250604051806040016040528060048152602001630ae8aa8960e31b81525060128260009081620000689190620001db565b506001620000778382620001db565b5060ff81166080524660a0526200008d6200009a565b60c0525062000325915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000ce9190620002a7565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200016157607f821691505b6020821081036200018257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001d657600081815260208120601f850160051c81016020861015620001b15750805b601f850160051c820191505b81811015620001d257828155600101620001bd565b5050505b505050565b81516001600160401b03811115620001f757620001f762000136565b6200020f816200020884546200014c565b8462000188565b602080601f8311600181146200024757600084156200022e5750858301515b600019600386901b1c1916600185901b178555620001d2565b600085815260208120601f198616915b82811015620002785788860151825594840194600190910190840162000257565b5085821015620002975787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620002b7816200014c565b60018281168015620002d25760018114620002e85762000319565b60ff198416875282151583028701945062000319565b8760005260208060002060005b85811015620003105781548a820152908401908201620002f5565b50505082870194505b50929695505050505050565b60805160a05160c051610f7962000355600039600061060f015260006105da015260006101c60152610f796000f3fe6080604052600436106100e15760003560e01c806370a082311161007f578063a9059cbb11610059578063a9059cbb1461027e578063d0e30db01461029e578063d505accf146102a6578063dd62ed3e146102c657600080fd5b806370a082311461020f5780637ecebe001461023c57806395d89b411461026957600080fd5b806323b872dd116100bb57806323b872dd146101745780632e1a7d4d14610194578063313ce567146101b45780633644e515146101fa57600080fd5b806306fdde03146100f5578063095ea7b31461012057806318160ddd1461015057600080fd5b366100f0576100ee6102fe565b005b600080fd5b34801561010157600080fd5b5061010a61033f565b6040516101179190610c02565b60405180910390f35b34801561012c57600080fd5b5061014061013b366004610c9e565b6103cd565b6040519015158152602001610117565b34801561015c57600080fd5b5061016660025481565b604051908152602001610117565b34801561018057600080fd5b5061014061018f366004610cc8565b610446565b3480156101a057600080fd5b506100ee6101af366004610d04565b61058a565b3480156101c057600080fd5b506101e87f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610117565b34801561020657600080fd5b506101666105d6565b34801561021b57600080fd5b5061016661022a366004610d1d565b60036020526000908152604090205481565b34801561024857600080fd5b50610166610257366004610d1d565b60056020526000908152604090205481565b34801561027557600080fd5b5061010a610631565b34801561028a57600080fd5b50610140610299366004610c9e565b61063e565b6100ee6102fe565b3480156102b257600080fd5b506100ee6102c1366004610d3f565b6106c3565b3480156102d257600080fd5b506101666102e1366004610db2565b600460209081526000928352604080842090915290825290205481565b61030833346109e7565b60405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b6000805461034c90610de5565b80601f016020809104026020016040519081016040528092919081815260200182805461037890610de5565b80156103c55780601f1061039a576101008083540402835291602001916103c5565b820191906000526020600020905b8154815290600101906020018083116103a857829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104359086815260200190565b60405180910390a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146104da576104a88382610e67565b73ffffffffffffffffffffffffffffffffffffffff861660009081526004602090815260408083203384529091529020555b73ffffffffffffffffffffffffffffffffffffffff85166000908152600360205260408120805485929061050f908490610e67565b909155505073ffffffffffffffffffffffffffffffffffffffff808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906105779087815260200190565b60405180910390a3506001949350505050565b6105943382610a60565b60405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a26105d33382610aee565b50565b60007f0000000000000000000000000000000000000000000000000000000000000000461461060c57610607610b68565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6001805461034c90610de5565b3360009081526003602052604081208054839190839061065f908490610e67565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104359086815260200190565b42841015610732576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b6000600161073e6105d6565b73ffffffffffffffffffffffffffffffffffffffff8a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e0830190915280519201919091207f190100000000000000000000000000000000000000000000000000000000000061010083015261010282019290925261012281019190915261014201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610890573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81161580159061090b57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610971576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e45520000000000000000000000000000000000006044820152606401610729565b73ffffffffffffffffffffffffffffffffffffffff90811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b80600260008282546109f99190610e7e565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604081208054839290610a95908490610e67565b909155505060028054829003905560405181815260009073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610a54565b600080600080600085875af1905080610b63576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152606401610729565b505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610b9a9190610e96565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600060208083528351808285015260005b81811015610c2f57858101830151858201604001528201610c13565b81811115610c41576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610c9957600080fd5b919050565b60008060408385031215610cb157600080fd5b610cba83610c75565b946020939093013593505050565b600080600060608486031215610cdd57600080fd5b610ce684610c75565b9250610cf460208501610c75565b9150604084013590509250925092565b600060208284031215610d1657600080fd5b5035919050565b600060208284031215610d2f57600080fd5b610d3882610c75565b9392505050565b600080600080600080600060e0888a031215610d5a57600080fd5b610d6388610c75565b9650610d7160208901610c75565b95506040880135945060608801359350608088013560ff81168114610d9557600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610dc557600080fd5b610dce83610c75565b9150610ddc60208401610c75565b90509250929050565b600181811c90821680610df957607f821691505b602082108103610e32577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610e7957610e79610e38565b500390565b60008219821115610e9157610e91610e38565b500190565b600080835481600182811c915080831680610eb257607f831692505b60208084108203610eea577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b818015610efe5760018114610f3157610f5e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952841515850289019650610f5e565b60008a81526020902060005b86811015610f565781548b820152908501908301610f3d565b505084890196505b50949897505050505050505056fea164736f6c634300080f000aa164736f6c634300080f000a",
    "sourceMap": "335:2109:8:-:0;;;1609:26:0;;;-1:-1:-1;;1609:26:0;1631:4;1609:26;;;;;;544:37:24;;335:2109:8;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000935760003560e01c80637d94263711620000625780637d94263714620000dc5780639258e48914620000f3578063ba414fa614620000fd578063fa7626d4146200011b57600080fd5b806307841bd414620000985780632f5ba3b014620000a45780633dbcbb7314620000bb5780634609fe1414620000c5575b600080fd5b620000a262000129565b005b620000a2620000b53660046200140e565b620001ea565b620000a262000277565b620000a2620000d6366004620014a2565b62000629565b620000a2620000ed36600462001537565b620008d5565b620000a262000960565b62000107620009cc565b604051901515815260200160405180910390f35b600054620001079060ff1681565b604080518082018252600881527f53616c74792e2e2e00000000000000000000000000000000000000000000000060209182015290517f7b8edd48646503e35ad861b89c211c3d2d8489e9bd92b4ca33550889f88af86391620001ce9183916200019590820162001398565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f90910116604052600062000b36565b50620001e68160405180602001620001959062001398565b5050565b6200022c8585858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250925062000b36915050565b506200026f8583838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250925062000b36915050565b505050505050565b604080518082018252600781527f412073616c74210000000000000000000000000000000000000000000000000060209182015290517ff66d1c49a6c3a2a06c177c5523de9d8ab86d28aa5e2333d2e48b853e7e28a4a791600091620003e891849190620002e7908201620013a6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f909101166040818152606060208301819052600a60808401527f4d6f636b20546f6b656e0000000000000000000000000000000000000000000060a08085019190915291830191909152600460c08301527f4d4f434b0000000000000000000000000000000000000000000000000000000060e0830152601290820152610100015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052620003d19291602001620015b6565b604051602081830303815290604052600062000b36565b90506200040081620003fa8462000d17565b62000e87565b620004d48173ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000450573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405262000498919081019062001618565b6040518060400160405280600a81526020017f4d6f636b20546f6b656e0000000000000000000000000000000000000000000081525062000fc5565b620005a88173ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000524573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526200056c919081019062001618565b6040518060400160405280600481526020017f4d4f434b0000000000000000000000000000000000000000000000000000000081525062000fc5565b620001e68173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620005f8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200061e9190620016ef565b60ff16601262001115565b60006200068d87604051806020016200064290620013a6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f90910116604081905262000393908a908a908a908a908a9060200162001758565b90506200069f81620003fa8962000d17565b620007748173ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015620006ef573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405262000737919081019062001618565b87878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525062000fc592505050565b620008498173ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620007c4573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526200080c919081019062001618565b85858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525062000fc592505050565b620008cc8173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000899573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008bf9190620016ef565b60ff168360ff1662001115565b50505050505050565b620009178383838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250925062000b36915050565b506200095a8383838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250925062000b36915050565b50505050565b604080518082018252600a81527f616e64207377656574210000000000000000000000000000000000000000000060209182015290517f1096b45157de7fd9778d004fe5b7230de32adf74d933fd7e6f3ac6d6d819dae791620001ce91839162000195908201620013b4565b60008054610100900460ff1615620009ed5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000b315760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000008284015282518083038401815260608301909352600092909162000a95917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001799565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905262000acf91620017e3565b6000604051808303816000865af19150503d806000811462000b0e576040519150601f19603f3d011682016040523d82523d6000602084013e62000b13565b606091505b509150508080602001905181019062000b2d919062001801565b9150505b919050565b6000806040518060400160405280601081526020017f67363d3d37363d34f03d5260086018f30000000000000000000000000000000081525090506000858251602084016000f5905073ffffffffffffffffffffffffffffffffffffffff811662000c02576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4445504c4f594d454e545f4641494c454400000000000000000000000000000060448201526064015b60405180910390fd5b62000c0d8662000d17565b925060008173ffffffffffffffffffffffffffffffffffffffff16858760405162000c399190620017e3565b60006040518083038185875af1925050503d806000811462000c78576040519150601f19603f3d011682016040523d82523d6000602084013e62000c7d565b606091505b5050905080801562000ca5575073ffffffffffffffffffffffffffffffffffffffff84163b15155b62000d0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f494e495449414c495a4154494f4e5f4641494c45440000000000000000000000604482015260640162000bf9565b5050509392505050565b604080518082018252601081527f67363d3d37363d34f03d5260086018f30000000000000000000000000000000060209182015290517fff00000000000000000000000000000000000000000000000000000000000000918101919091527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b166021820152603581018290527f21c35dbe1b344a2488cf3321d6ce542f8e9f305544ff09e4993a62319a497c1f6055820152600090819062000df4906075015b6040516020818303038152906040528051906020012090565b6040517fd69400000000000000000000000000000000000000000000000000000000000060208201527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606083901b1660228201527f0100000000000000000000000000000000000000000000000000000000000000603682015290915062000e809060370162000ddb565b9392505050565b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614620001e6577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000f419060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b61646460408201527f726573735d000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162000f7a919062001825565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405162000fb3919062001887565b60405180910390a1620001e662001215565b8060405160200162000fd89190620017e3565b6040516020818303038152906040528051906020012082604051602001620010019190620017e3565b6040516020818303038152906040528051906020012014620001e6577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620010a39060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b73747260408201527f696e675d00000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051620010dc919062001911565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838260405162000fb391906200196b565b808214620001e6577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620011a39060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e60408201527f745d000000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051620011dc9190620019a9565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162000fb39190620019f5565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200136a5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052620012e7929160200162001799565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526200132191620017e3565b6000604051808303816000865af19150503d806000811462001360576040519150601f19603f3d011682016040523d82523d6000602084013e62001365565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b6106b08062001a3483390190565b61124080620020e483390190565b6112ce806200332483390190565b60008083601f840112620013d557600080fd5b50813567ffffffffffffffff811115620013ee57600080fd5b6020830191508360208285010111156200140757600080fd5b9250929050565b6000806000806000606086880312156200142757600080fd5b85359450602086013567ffffffffffffffff808211156200144757600080fd5b6200145589838a01620013c2565b909650945060408801359150808211156200146f57600080fd5b506200147e88828901620013c2565b969995985093965092949392505050565b60ff811681146200149f57600080fd5b50565b60008060008060008060808789031215620014bc57600080fd5b86359550602087013567ffffffffffffffff80821115620014dc57600080fd5b620014ea8a838b01620013c2565b909750955060408901359150808211156200150457600080fd5b506200151389828a01620013c2565b909450925050606087013562001529816200148f565b809150509295509295509295565b6000806000604084860312156200154d57600080fd5b83359250602084013567ffffffffffffffff8111156200156c57600080fd5b6200157a86828701620013c2565b9497909650939450505050565b60005b83811015620015a45781810151838201526020016200158a565b838111156200095a5750506000910152565b60008351620015ca81846020880162001587565b835190830190620015e081836020880162001587565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156200162b57600080fd5b815167ffffffffffffffff808211156200164457600080fd5b818401915084601f8301126200165957600080fd5b8151818111156200166e576200166e620015e9565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715620016b757620016b7620015e9565b81604052828152876020848701011115620016d157600080fd5b620016e483602083016020880162001587565b979650505050505050565b6000602082840312156200170257600080fd5b815162000e80816200148f565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6060815260006200176e6060830187896200170f565b8281036020840152620017838186886200170f565b91505060ff831660408301529695505050505050565b7fffffffff000000000000000000000000000000000000000000000000000000008316815260008251620017d581600485016020870162001587565b919091016004019392505050565b60008251620017f781846020870162001587565b9190910192915050565b6000602082840312156200181457600080fd5b8151801515811462000e8057600080fd5b6040815260006200186360408301600a81527f2020457870656374656400000000000000000000000000000000000000000000602082015260400190565b905073ffffffffffffffffffffffffffffffffffffffff8316602083015292915050565b6040815260006200186360408301600a81527f2020202041637475616c00000000000000000000000000000000000000000000602082015260400190565b60008151808452620018df81602086016020860162001587565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6040815260006200194f60408301600a81527f2020457870656374656400000000000000000000000000000000000000000000602082015260400190565b8281036020840152620019638185620018c5565b949350505050565b6040815260006200194f60408301600a81527f2020202041637475616c00000000000000000000000000000000000000000000602082015260400190565b604081526000620019e760408301600a81527f2020457870656374656400000000000000000000000000000000000000000000602082015260400190565b905082602083015292915050565b604081526000620019e760408301600a81527f2020202041637475616c0000000000000000000000000000000000000000000060208201526040019056fe608060405234801561001057600080fd5b5060008054336001600160a01b03199182168117835560018054909216909155604051909190829081907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908490a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a3505061060a806100a66000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063890eba6811610050578063890eba68146100a75780638da5cb5b146100e1578063bf7e214f1461012657600080fd5b806313af4035146100775780633a7104d11461008c5780637a9e5e4b14610094575b600080fd5b61008a6100853660046105b7565b610146565b005b61008a61024f565b61008a6100a23660046105b7565b610324565b6001546100cc9074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020015b60405180910390f35b6000546101019073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100d8565b6001546101019073ffffffffffffffffffffffffffffffffffffffff1681565b610174336000357fffffffff0000000000000000000000000000000000000000000000000000000016610481565b6101df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b61027d336000357fffffffff0000000000000000000000000000000000000000000000000000000016610481565b6102e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016101d6565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633148061040757506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa1580156103e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040791906105db565b61041057600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b60015460009073ffffffffffffffffffffffffffffffffffffffff16801580159061056557506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015610541573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056591906105db565b8061058a575060005473ffffffffffffffffffffffffffffffffffffffff8581169116145b949350505050565b73ffffffffffffffffffffffffffffffffffffffff811681146105b457600080fd5b50565b6000602082840312156105c957600080fd5b81356105d481610592565b9392505050565b6000602082840312156105ed57600080fd5b815180151581146105d457600080fdfea164736f6c634300080f000a60e06040523480156200001157600080fd5b5060405162001240380380620012408339810160408190526200003491620001e3565b8282826000620000458482620002f7565b506001620000548382620002f7565b5060ff81166080524660a0526200006a6200007a565b60c0525062000441945050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000ae9190620003c3565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013e57600080fd5b81516001600160401b03808211156200015b576200015b62000116565b604051601f8301601f19908116603f0116810190828211818310171562000186576200018662000116565b81604052838152602092508683858801011115620001a357600080fd5b600091505b83821015620001c75785820183015181830184015290820190620001a8565b83821115620001d95760008385830101525b9695505050505050565b600080600060608486031215620001f957600080fd5b83516001600160401b03808211156200021157600080fd5b6200021f878388016200012c565b945060208601519150808211156200023657600080fd5b5062000245868287016200012c565b925050604084015160ff811681146200025d57600080fd5b809150509250925092565b600181811c908216806200027d57607f821691505b6020821081036200029e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002f257600081815260208120601f850160051c81016020861015620002cd5750805b601f850160051c820191505b81811015620002ee57828155600101620002d9565b5050505b505050565b81516001600160401b0381111562000313576200031362000116565b6200032b8162000324845462000268565b84620002a4565b602080601f8311600181146200036357600084156200034a5750858301515b600019600386901b1c1916600185901b178555620002ee565b600085815260208120601f198616915b82811015620003945788860151825594840194600190910190840162000373565b5085821015620003b35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620003d38162000268565b60018281168015620003ee5760018114620004045762000435565b60ff198416875282151583028701945062000435565b8760005260208060002060005b858110156200042c5781548a82015290840190820162000411565b50505082870194505b50929695505050505050565b60805160a05160c051610dcf6200047160003960006104e0015260006104ab0152600061015f0152610dcf6000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c5780639dc29fac116100665780639dc29fac146101f8578063a9059cbb1461020b578063d505accf1461021e578063dd62ed3e1461023157600080fd5b806370a08231146101b05780637ecebe00146101d057806395d89b41146101f057600080fd5b806323b872dd116100c857806323b872dd14610147578063313ce5671461015a5780633644e5151461019357806340c10f191461019b57600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761025c565b6040516101049190610a71565b60405180910390f35b61012061011b366004610b0d565b6102ea565b6040519015158152602001610104565b61013960025481565b604051908152602001610104565b610120610155366004610b37565b610363565b6101817f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610104565b6101396104a7565b6101ae6101a9366004610b0d565b610502565b005b6101396101be366004610b73565b60036020526000908152604090205481565b6101396101de366004610b73565b60056020526000908152604090205481565b6100f7610510565b6101ae610206366004610b0d565b61051d565b610120610219366004610b0d565b610527565b6101ae61022c366004610b95565b6105ac565b61013961023f366004610c08565b600460209081526000928352604080842090915290825290205481565b6000805461026990610c3b565b80601f016020809104026020016040519081016040528092919081815260200182805461029590610c3b565b80156102e25780601f106102b7576101008083540402835291602001916102e2565b820191906000526020600020905b8154815290600101906020018083116102c557829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103529086815260200190565b60405180910390a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146103f7576103c58382610cbd565b73ffffffffffffffffffffffffffffffffffffffff861660009081526004602090815260408083203384529091529020555b73ffffffffffffffffffffffffffffffffffffffff85166000908152600360205260408120805485929061042c908490610cbd565b909155505073ffffffffffffffffffffffffffffffffffffffff808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104949087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146104dd576104d86108d0565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b61050c828261096a565b5050565b6001805461026990610c3b565b61050c82826109e3565b33600090815260036020526040812080548391908390610548908490610cbd565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103529086815260200190565b4284101561061b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b600060016106276104a7565b73ffffffffffffffffffffffffffffffffffffffff8a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e0830190915280519201919091207f190100000000000000000000000000000000000000000000000000000000000061010083015261010282019290925261012281019190915261014201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610779573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116158015906107f457508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b61085a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e45520000000000000000000000000000000000006044820152606401610612565b73ffffffffffffffffffffffffffffffffffffffff90811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516109029190610cd4565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b806002600082825461097c9190610daa565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604081208054839290610a18908490610cbd565b909155505060028054829003905560405181815260009073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016109d7565b600060208083528351808285015260005b81811015610a9e57858101830151858201604001528201610a82565b81811115610ab0576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610b0857600080fd5b919050565b60008060408385031215610b2057600080fd5b610b2983610ae4565b946020939093013593505050565b600080600060608486031215610b4c57600080fd5b610b5584610ae4565b9250610b6360208501610ae4565b9150604084013590509250925092565b600060208284031215610b8557600080fd5b610b8e82610ae4565b9392505050565b600080600080600080600060e0888a031215610bb057600080fd5b610bb988610ae4565b9650610bc760208901610ae4565b95506040880135945060608801359350608088013560ff81168114610beb57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610c1b57600080fd5b610c2483610ae4565b9150610c3260208401610ae4565b90509250929050565b600181811c90821680610c4f57607f821691505b602082108103610c88577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610ccf57610ccf610c8e565b500390565b600080835481600182811c915080831680610cf057607f831692505b60208084108203610d28577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b818015610d3c5760018114610d6f57610d9c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952841515850289019650610d9c565b60008a81526020902060005b86811015610d945781548b820152908501908301610d7b565b505084890196505b509498975050505050505050565b60008219821115610dbd57610dbd610c8e565b50019056fea164736f6c634300080f000a60e06040523480156200001157600080fd5b506040518060400160405280600d81526020016c2bb930b83832b21022ba3432b960991b815250604051806040016040528060048152602001630ae8aa8960e31b81525060128260009081620000689190620001db565b506001620000778382620001db565b5060ff81166080524660a0526200008d6200009a565b60c0525062000325915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000ce9190620002a7565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200016157607f821691505b6020821081036200018257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001d657600081815260208120601f850160051c81016020861015620001b15750805b601f850160051c820191505b81811015620001d257828155600101620001bd565b5050505b505050565b81516001600160401b03811115620001f757620001f762000136565b6200020f816200020884546200014c565b8462000188565b602080601f8311600181146200024757600084156200022e5750858301515b600019600386901b1c1916600185901b178555620001d2565b600085815260208120601f198616915b82811015620002785788860151825594840194600190910190840162000257565b5085821015620002975787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620002b7816200014c565b60018281168015620002d25760018114620002e85762000319565b60ff198416875282151583028701945062000319565b8760005260208060002060005b85811015620003105781548a820152908401908201620002f5565b50505082870194505b50929695505050505050565b60805160a05160c051610f7962000355600039600061060f015260006105da015260006101c60152610f796000f3fe6080604052600436106100e15760003560e01c806370a082311161007f578063a9059cbb11610059578063a9059cbb1461027e578063d0e30db01461029e578063d505accf146102a6578063dd62ed3e146102c657600080fd5b806370a082311461020f5780637ecebe001461023c57806395d89b411461026957600080fd5b806323b872dd116100bb57806323b872dd146101745780632e1a7d4d14610194578063313ce567146101b45780633644e515146101fa57600080fd5b806306fdde03146100f5578063095ea7b31461012057806318160ddd1461015057600080fd5b366100f0576100ee6102fe565b005b600080fd5b34801561010157600080fd5b5061010a61033f565b6040516101179190610c02565b60405180910390f35b34801561012c57600080fd5b5061014061013b366004610c9e565b6103cd565b6040519015158152602001610117565b34801561015c57600080fd5b5061016660025481565b604051908152602001610117565b34801561018057600080fd5b5061014061018f366004610cc8565b610446565b3480156101a057600080fd5b506100ee6101af366004610d04565b61058a565b3480156101c057600080fd5b506101e87f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610117565b34801561020657600080fd5b506101666105d6565b34801561021b57600080fd5b5061016661022a366004610d1d565b60036020526000908152604090205481565b34801561024857600080fd5b50610166610257366004610d1d565b60056020526000908152604090205481565b34801561027557600080fd5b5061010a610631565b34801561028a57600080fd5b50610140610299366004610c9e565b61063e565b6100ee6102fe565b3480156102b257600080fd5b506100ee6102c1366004610d3f565b6106c3565b3480156102d257600080fd5b506101666102e1366004610db2565b600460209081526000928352604080842090915290825290205481565b61030833346109e7565b60405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b6000805461034c90610de5565b80601f016020809104026020016040519081016040528092919081815260200182805461037890610de5565b80156103c55780601f1061039a576101008083540402835291602001916103c5565b820191906000526020600020905b8154815290600101906020018083116103a857829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104359086815260200190565b60405180910390a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146104da576104a88382610e67565b73ffffffffffffffffffffffffffffffffffffffff861660009081526004602090815260408083203384529091529020555b73ffffffffffffffffffffffffffffffffffffffff85166000908152600360205260408120805485929061050f908490610e67565b909155505073ffffffffffffffffffffffffffffffffffffffff808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906105779087815260200190565b60405180910390a3506001949350505050565b6105943382610a60565b60405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a26105d33382610aee565b50565b60007f0000000000000000000000000000000000000000000000000000000000000000461461060c57610607610b68565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6001805461034c90610de5565b3360009081526003602052604081208054839190839061065f908490610e67565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104359086815260200190565b42841015610732576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b6000600161073e6105d6565b73ffffffffffffffffffffffffffffffffffffffff8a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e0830190915280519201919091207f190100000000000000000000000000000000000000000000000000000000000061010083015261010282019290925261012281019190915261014201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610890573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81161580159061090b57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610971576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e45520000000000000000000000000000000000006044820152606401610729565b73ffffffffffffffffffffffffffffffffffffffff90811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b80600260008282546109f99190610e7e565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604081208054839290610a95908490610e67565b909155505060028054829003905560405181815260009073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610a54565b600080600080600085875af1905080610b63576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152606401610729565b505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610b9a9190610e96565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600060208083528351808285015260005b81811015610c2f57858101830151858201604001528201610c13565b81811115610c41576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610c9957600080fd5b919050565b60008060408385031215610cb157600080fd5b610cba83610c75565b946020939093013593505050565b600080600060608486031215610cdd57600080fd5b610ce684610c75565b9250610cf460208501610c75565b9150604084013590509250925092565b600060208284031215610d1657600080fd5b5035919050565b600060208284031215610d2f57600080fd5b610d3882610c75565b9392505050565b600080600080600080600060e0888a031215610d5a57600080fd5b610d6388610c75565b9650610d7160208901610c75565b95506040880135945060608801359350608088013560ff81168114610d9557600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610dc557600080fd5b610dce83610c75565b9150610ddc60208401610c75565b90509250929050565b600181811c90821680610df957607f821691505b602082108103610e32577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610e7957610e79610e38565b500390565b60008219821115610e9157610e91610e38565b500190565b600080835481600182811c915080831680610eb257607f831692505b60208084108203610eea577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b818015610efe5760018114610f3157610f5e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952841515850289019650610f5e565b60008a81526020902060005b86811015610f565781548b820152908501908301610f3d565b505084890196505b50949897505050505050505056fea164736f6c634300080f000aa164736f6c634300080f000a",
    "sourceMap": "335:2109:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:251;;;:::i;:::-;;2189:252;;;;;;:::i;:::-;;:::i;377:548::-;;;:::i;1449:540::-;;;;;;:::i;:::-;;:::i;1997:184::-;;;;;;:::i;:::-;;:::i;1192:249::-;;;:::i;1865:600:0:-;;;:::i;:::-;;;2846:14:51;;2839:22;2821:41;;2809:2;2794:18;1865:600:0;;;;;;;1609:26;;;;;;;;;933:251:8;1020:17;;;;;;;;;;;;;;;;;1072:32;;1010:28;;1051:57;;1010:28;;1072:32;;;;;:::i;:::-;;;;;;;;;;;;;;;;1106:1;1051:14;:57::i;:::-;;1119;1134:4;1140:32;;;;;;;;:::i;1119:57::-;;984:200;933:251::o;2189:252::-;2354:34;2369:4;2375:9;;2354:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2354:34:8;-1:-1:-1;2354:14:8;;-1:-1:-1;;2354:34:8:i;:::-;;2399;2414:4;2420:9;;2399:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2399:34:8;-1:-1:-1;2399:14:8;;-1:-1:-1;;2399:34:8:i;:::-;;2189:252;;;;;:::o;377:548::-;447:16;;;;;;;;;;;;;;;;;595:28;;437:27;;422:12;;522:175;;437:27;;595:28;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3211:2:51;595:28:8;625:36;;3193:21:51;;;3250:2;3230:18;;;3223:30;3290:12;3269:19;;;;3262:41;;;;3319:20;;;3312:33;;;;3382:1;3361:19;;;3354:30;3421:6;3400:19;;;3393:35;658:2:8;3480:18:51;;;3473:45;3445:19;;625:36:8;;;;;;;;;;;;;;;578:84;;;625:36;578:84;;:::i;:::-;;;;;;;;;;;;;681:1;522:14;:175::i;:::-;477:231;;721:54;738:8;749:25;769:4;749:19;:25::i;:::-;721:8;:54::i;:::-;788:39;797:8;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;788:39;;;;;;;;;;;;;;;;;:8;:39::i;:::-;838:35;847:8;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;838:35;;;;;;;;;;;;;;;;;:8;:35::i;:::-;884:33;893:8;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;884:33;;914:2;884:8;:33::i;1449:540::-;1611:18;1656:107;1671:4;1694:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1724:34;;1735:4;;;;1741:6;;;;1749:8;;1694:28;1724:34;;:::i;1656:107::-;1611:163;;1787:54;1804:8;1815:25;1835:4;1815:19;:25::i;1787:54::-;1854:31;1863:8;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1880:4;;1854:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1854:8:8;;-1:-1:-1;;;1854:31:8:i;:::-;1896:35;1905:8;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1924:6;;1896:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1896:8:8;;-1:-1:-1;;;1896:35:8:i;:::-;1942:39;1951:8;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1942:39;;1972:8;1942:39;;:8;:39::i;:::-;1600:389;1449:540;;;;;;:::o;1997:184::-;2096:33;2111:4;2117:8;;2096:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2096:33:8;-1:-1:-1;2096:14:8;;-1:-1:-1;;2096:33:8:i;:::-;;2140;2155:4;2161:8;;2140:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2140:33:8;-1:-1:-1;2140:14:8;;-1:-1:-1;;2140:33:8:i;:::-;;1997:184;;;:::o;1192:249::-;1284:19;;;;;;;;;;;;;;;;;1338:23;;1274:30;;1317:48;;1274:30;;1338:23;;;;;:::i;1865:600:0:-;1899:4;1920:7;;;;;;;1916:542;;;-1:-1:-1;1951:7:0;;;;;;;;1865:600::o;1916:542::-;1991:17;3070:42;3058:55;3141:16;2031:382;;2251:43;;;1712:64;2251:43;;;6677:74:51;;;2276:17:0;6767:18:51;;;6760:34;2251:43:0;;;;;;;;;6650:18:51;;;2251:43:0;;;-1:-1:-1;;1712:64:0;;2139:178;;2189:34;;2139:178;;;:::i;:::-;;;;;;;;;;;;;;;2099:237;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:264;;;2381:7;2370:27;;;;;;;;;;;;:::i;:::-;2355:42;;2053:360;2031:382;2434:12;1865:600;-1:-1:-1;1865:600:0:o;2559:771:45:-;2683:16;2712:31;2746:14;;;;;;;;;;;;;;;;;2712:48;;2773:13;3057:4;3036:18;3030:25;3025:2;3005:18;3001:27;2998:1;2990:72;2981:81;-1:-1:-1;3091:19:45;;;3083:49;;;;;;;7990:2:51;3083:49:45;;;7972:21:51;8029:2;8009:18;;;8002:30;8068:19;8048:18;;;8041:47;8105:18;;3083:49:45;;;;;;;;;3156:17;3168:4;3156:11;:17::i;:::-;3145:28;;3185:12;3203:5;:10;;3221:5;3228:12;3203:38;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3184:57;;;3260:7;:36;;;;-1:-1:-1;3271:20:45;;;;:25;;3260:36;3252:70;;;;;;;8336:2:51;3252:70:45;;;8318:21:51;8375:2;8355:18;;;8348:30;8414:23;8394:18;;;8387:51;8455:18;;3252:70:45;8134:345:51;3252:70:45;2701:629;;;2559:771;;;;;:::o;3338:875::-;2535:14;;;;;;;;;;;;;;;;;3456:273;;3519:12;3456:273;;;8695:92:51;;;;8837:66;3587:4:45;8824:2:51;8820:15;8816:88;8803:11;;;8796:109;8921:12;;;8914:28;;;2525:25:45;8958:12:51;;;8951:28;-1:-1:-1;;;;3432:326:45;;8995:12:51;;3456:273:45;;;;;;;;;;;;;3432:308;;;;;;405:10:44;286:140;3432:326:45;3819:353;;9361:66:51;3819:353:45;;;9349:79:51;9478:66;9465:2;9461:15;;;9457:88;9444:11;;;9437:109;9576:66;9562:12;;;9555:88;3416:342:45;;-1:-1:-1;3791:414:45;;9659:12:51;;3819:353:45;9018:659:51;3791:414:45;3771:434;3338:875;-1:-1:-1;;;3338:875:45:o;3721:284:0:-;3790:1;3785:6;;:1;:6;;;3781:217;;3813:44;;;;;9884:2:51;9866:21;;;9923:2;9903:18;;;9896:30;9962:34;9957:2;9942:18;;9935:62;10033:7;10028:2;10013:18;;10006:35;10073:3;10058:19;;9682:401;3813:44:0;;;;;;;;3877:34;3909:1;3877:34;;;;;;:::i;:::-;;;;;;;;3931;3963:1;3931:34;;;;;;:::i;:::-;;;;;;;;3980:6;:4;:6::i;15115:351::-;15252:1;15235:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;15225:30;;;;;;15218:1;15201:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;15191:30;;;;;;:64;15187:272;;15277:43;;;;;11703:2:51;11685:21;;;11742:2;11722:18;;;11715:30;11781:34;11776:2;11761:18;;11754:62;11852:6;11847:2;11832:18;;11825:34;11891:3;11876:19;;11501:400;15277:43:0;;;;;;;;15340:33;15371:1;15340:33;;;;;;:::i;:::-;;;;;;;;15393;15424:1;15393:33;;;;;;:::i;5358:269::-;5421:1;5416;:6;5412:208;;5444:41;;;;;13320:2:51;13302:21;;;13359:2;13339:18;;;13332:30;13398:34;13393:2;13378:18;;13371:62;13469:4;13464:2;13449:18;;13442:32;13506:3;13491:19;;13118:398;5444:41:0;;;;;;;;5505:31;5534:1;5505:31;;;;;;:::i;:::-;;;;;;;;5556;5585:1;5556:31;;;;;;:::i;2474:435::-;3070:42;3058:55;3141:16;2510:367;;2714:67;;;1712:64;2714:67;;;14429:74:51;;;2739:17:0;14519:18:51;;;14512:34;;;;2774:4:0;14562:18:51;;;14555:34;2548:11:0;;1712:64;2647:43;;14402:18:51;;2714:67:0;;;;;;;;;;;;;;2601:199;;;2714:67;2601:199;;:::i;:::-;;;;;;;;;;;;;;;2565:250;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2510:367:0;2887:7;:14;;;;;;;;2474:435::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:347:51:-;65:8;75:6;129:3;122:4;114:6;110:17;106:27;96:55;;147:1;144;137:12;96:55;-1:-1:-1;170:20:51;;213:18;202:30;;199:50;;;245:1;242;235:12;199:50;282:4;274:6;270:17;258:29;;334:3;327:4;318:6;310;306:19;302:30;299:39;296:59;;;351:1;348;341:12;296:59;14:347;;;;;:::o;366:785::-;465:6;473;481;489;497;550:2;538:9;529:7;525:23;521:32;518:52;;;566:1;563;556:12;518:52;602:9;589:23;579:33;;663:2;652:9;648:18;635:32;686:18;727:2;719:6;716:14;713:34;;;743:1;740;733:12;713:34;782:58;832:7;823:6;812:9;808:22;782:58;:::i;:::-;859:8;;-1:-1:-1;756:84:51;-1:-1:-1;947:2:51;932:18;;919:32;;-1:-1:-1;963:16:51;;;960:36;;;992:1;989;982:12;960:36;;1031:60;1083:7;1072:8;1061:9;1057:24;1031:60;:::i;:::-;366:785;;;;-1:-1:-1;366:785:51;;-1:-1:-1;1110:8:51;;1005:86;366:785;-1:-1:-1;;;366:785:51:o;1156:114::-;1240:4;1233:5;1229:16;1222:5;1219:27;1209:55;;1260:1;1257;1250:12;1209:55;1156:114;:::o;1275:919::-;1383:6;1391;1399;1407;1415;1423;1476:3;1464:9;1455:7;1451:23;1447:33;1444:53;;;1493:1;1490;1483:12;1444:53;1529:9;1516:23;1506:33;;1590:2;1579:9;1575:18;1562:32;1613:18;1654:2;1646:6;1643:14;1640:34;;;1670:1;1667;1660:12;1640:34;1709:58;1759:7;1750:6;1739:9;1735:22;1709:58;:::i;:::-;1786:8;;-1:-1:-1;1683:84:51;-1:-1:-1;1874:2:51;1859:18;;1846:32;;-1:-1:-1;1890:16:51;;;1887:36;;;1919:1;1916;1909:12;1887:36;;1958:60;2010:7;1999:8;1988:9;1984:24;1958:60;:::i;:::-;2037:8;;-1:-1:-1;1932:86:51;-1:-1:-1;;2122:2:51;2107:18;;2094:32;2135:29;2094:32;2135:29;:::i;:::-;2183:5;2173:15;;;1275:919;;;;;;;;:::o;2199:477::-;2278:6;2286;2294;2347:2;2335:9;2326:7;2322:23;2318:32;2315:52;;;2363:1;2360;2353:12;2315:52;2399:9;2386:23;2376:33;;2460:2;2449:9;2445:18;2432:32;2487:18;2479:6;2476:30;2473:50;;;2519:1;2516;2509:12;2473:50;2558:58;2608:7;2599:6;2588:9;2584:22;2558:58;:::i;:::-;2199:477;;2635:8;;-1:-1:-1;2532:84:51;;-1:-1:-1;;;;2199:477:51:o;3529:258::-;3601:1;3611:113;3625:6;3622:1;3619:13;3611:113;;;3701:11;;;3695:18;3682:11;;;3675:39;3647:2;3640:10;3611:113;;;3742:6;3739:1;3736:13;3733:48;;;-1:-1:-1;;3777:1:51;3759:16;;3752:27;3529:258::o;3792:466::-;3967:3;4005:6;3999:13;4021:53;4067:6;4062:3;4055:4;4047:6;4043:17;4021:53;:::i;:::-;4137:13;;4096:16;;;;4159:57;4137:13;4096:16;4193:4;4181:17;;4159:57;:::i;:::-;4232:20;;3792:466;-1:-1:-1;;;;3792:466:51:o;4263:184::-;4315:77;4312:1;4305:88;4412:4;4409:1;4402:15;4436:4;4433:1;4426:15;4452:943;4532:6;4585:2;4573:9;4564:7;4560:23;4556:32;4553:52;;;4601:1;4598;4591:12;4553:52;4634:9;4628:16;4663:18;4704:2;4696:6;4693:14;4690:34;;;4720:1;4717;4710:12;4690:34;4758:6;4747:9;4743:22;4733:32;;4803:7;4796:4;4792:2;4788:13;4784:27;4774:55;;4825:1;4822;4815:12;4774:55;4854:2;4848:9;4876:2;4872;4869:10;4866:36;;;4882:18;;:::i;:::-;5016:2;5010:9;5078:4;5070:13;;4921:66;5066:22;;;5090:2;5062:31;5058:40;5046:53;;;5114:18;;;5134:22;;;5111:46;5108:72;;;5160:18;;:::i;:::-;5200:10;5196:2;5189:22;5235:2;5227:6;5220:18;5275:7;5270:2;5265;5261;5257:11;5253:20;5250:33;5247:53;;;5296:1;5293;5286:12;5247:53;5309:55;5361:2;5356;5348:6;5344:15;5339:2;5335;5331:11;5309:55;:::i;:::-;5383:6;4452:943;-1:-1:-1;;;;;;;4452:943:51:o;5400:247::-;5468:6;5521:2;5509:9;5500:7;5496:23;5492:32;5489:52;;;5537:1;5534;5527:12;5489:52;5569:9;5563:16;5588:29;5611:5;5588:29;:::i;5652:326::-;5741:6;5736:3;5729:19;5793:6;5786:5;5779:4;5774:3;5770:14;5757:43;;5845:1;5838:4;5829:6;5824:3;5820:16;5816:27;5809:38;5711:3;5967:4;5897:66;5892:2;5884:6;5880:15;5876:88;5871:3;5867:98;5863:109;5856:116;;5652:326;;;;:::o;5983:515::-;6224:2;6213:9;6206:21;6187:4;6250:62;6308:2;6297:9;6293:18;6285:6;6277;6250:62;:::i;:::-;6360:9;6352:6;6348:22;6343:2;6332:9;6328:18;6321:50;6388;6431:6;6423;6415;6388:50;:::i;:::-;6380:58;;;6486:4;6478:6;6474:17;6469:2;6458:9;6454:18;6447:45;5983:515;;;;;;;;:::o;6805:417::-;7002:66;6994:6;6990:79;6985:3;6978:92;6960:3;7099:6;7093:13;7115:61;7169:6;7165:1;7160:3;7156:11;7149:4;7141:6;7137:17;7115:61;:::i;:::-;7196:16;;;;7214:1;7192:24;;6805:417;-1:-1:-1;;;6805:417:51:o;7227:274::-;7356:3;7394:6;7388:13;7410:53;7456:6;7451:3;7444:4;7436:6;7432:17;7410:53;:::i;:::-;7479:16;;;;;7227:274;-1:-1:-1;;7227:274:51:o;7506:277::-;7573:6;7626:2;7614:9;7605:7;7601:23;7597:32;7594:52;;;7642:1;7639;7632:12;7594:52;7674:9;7668:16;7727:5;7720:13;7713:21;7706:5;7703:32;7693:60;;7749:1;7746;7739:12;10252:397;10482:2;10471:9;10464:21;10445:4;10502:49;10547:2;10536:9;10532:18;10165:2;10153:15;;10200:12;10193:4;10184:14;;10177:36;10238:2;10229:12;;10088:159;10502:49;10494:57;;10599:42;10591:6;10587:55;10582:2;10571:9;10567:18;10560:83;10252:397;;;;:::o;10818:::-;11048:2;11037:9;11030:21;11011:4;11068:49;11113:2;11102:9;11098:18;10731:2;10719:15;;10766:12;10759:4;10750:14;;10743:36;10804:2;10795:12;;10654:159;11906:317;11948:3;11986:5;11980:12;12013:6;12008:3;12001:19;12029:63;12085:6;12078:4;12073:3;12069:14;12062:4;12055:5;12051:16;12029:63;:::i;:::-;12137:2;12125:15;12142:66;12121:88;12112:98;;;;12212:4;12108:109;;11906:317;-1:-1:-1;;11906:317:51:o;12228:440::-;12478:2;12467:9;12460:21;12441:4;12504:49;12549:2;12538:9;12534:18;10165:2;10153:15;;10200:12;10193:4;10184:14;;10177:36;10238:2;10229:12;;10088:159;12504:49;12601:9;12593:6;12589:22;12584:2;12573:9;12569:18;12562:50;12629:33;12655:6;12647;12629:33;:::i;:::-;12621:41;12228:440;-1:-1:-1;;;;12228:440:51:o;12673:::-;12923:2;12912:9;12905:21;12886:4;12949:49;12994:2;12983:9;12979:18;10731:2;10719:15;;10766:12;10759:4;10750:14;;10743:36;10804:2;10795:12;;10654:159;13521:348;13751:2;13740:9;13733:21;13714:4;13771:49;13816:2;13805:9;13801:18;10165:2;10153:15;;10200:12;10193:4;10184:14;;10177:36;10238:2;10229:12;;10088:159;13771:49;13763:57;;13856:6;13851:2;13840:9;13836:18;13829:34;13521:348;;;;:::o;13874:::-;14104:2;14093:9;14086:21;14067:4;14124:49;14169:2;14158:9;14154:18;10731:2;10719:15;;10766:12;10759:4;10750:14;;10743:36;10804:2;10795:12;;10654:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "testDeployERC20()": "3dbcbb73",
    "testDeployERC20(bytes32,string,string,uint8)": "4609fe14",
    "testFailDoubleDeployDifferentBytecode()": "9258e489",
    "testFailDoubleDeployDifferentBytecode(bytes32,bytes,bytes)": "2f5ba3b0",
    "testFailDoubleDeploySameBytecode()": "07841bd4",
    "testFailDoubleDeploySameBytecode(bytes32,bytes)": "7d942637"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testDeployERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"testDeployERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"bytecode1\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bytecode2\",\"type\":\"bytes\"}],\"name\":\"testFailDoubleDeployDifferentBytecode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFailDoubleDeployDifferentBytecode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFailDoubleDeploySameBytecode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"}],\"name\":\"testFailDoubleDeploySameBytecode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/CREATE3.t.sol\":\"CREATE3Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":ds-test/=lib/ds-test/src/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0xd4cc3f57e7af003954200ec4ee92e8f189885cba55ae9cf87e7a59985d8e963e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://64df22826aa96e9c9eaebb698f5940ecafe95d72782b60b8f6fd68f6cd023bda\",\"dweb:/ipfs/QmSJGqC4GyyHdMUc2ViatN6wKZNBiaxRzntKH7JwM2UQ8R\"]},\"src/auth/Auth.sol\":{\"keccak256\":\"0x2bc7e46ecae8db6dbd482164eb79665c0ebec7f970e442c5ac5cce870248eee6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5287312e75838e450390ce1d876f67105de906cf2f908bb58311262a2f51f82a\",\"dweb:/ipfs/QmPsnZHibbDS5VcB2uDz3cEqyRKxKpLs8LPQ7y6vyEWTKL\"]},\"src/test/CREATE3.t.sol\":{\"keccak256\":\"0x08df71591729914243ac6245ed81df2627669f102fc0098a145915d02543fca9\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://aa5436b666978743e9fb12a8068f896bbf61f53bff191f46becae7f0d5a57b89\",\"dweb:/ipfs/QmQXX88s2KBm9tv8x3Fx5QX9AvLXL4o5SSqpt3KV85h5kX\"]},\"src/test/utils/DSTestPlus.sol\":{\"keccak256\":\"0xe7a7f10c038e784e5b134fa1e1d39f706adc7cf9ac0c3a44d21f6bd298d6235f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0ec326fec8aed3ae8f27cf1d811d102f31044a029a1ef8e5a2ee8111408c5316\",\"dweb:/ipfs/QmQLjeMnGHQ6hnn1rfftVZDt1uR7TiwL9DfJRLRgmsV6VX\"]},\"src/test/utils/Hevm.sol\":{\"keccak256\":\"0xd4d48a54bd3ce0830b561c487dcbd29f9e3d1988c333b7fd05b44b4e30bc49bb\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3ed2544d9c41e165221373e60113c948599f95f9e7fcbb31038d52be3324de6f\",\"dweb:/ipfs/QmP8ibmcfcGjdAaxRMYWuLBtLoJgpJ2ykZdUdZrGpKd2jt\"]},\"src/test/utils/mocks/MockAuthChild.sol\":{\"keccak256\":\"0x538a251b246d4376a89c56a33039445da25bf43ec34a8f95b66ea04f1e95c101\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a3337ada538238038497bd3a10ee79b60b1a69fc7f74c2dfddcdcbe62321975c\",\"dweb:/ipfs/QmYPMhh4CvcsLtFRfsTmRLABY2LN3wYsYjaB9qiBEdoPfz\"]},\"src/test/utils/mocks/MockERC20.sol\":{\"keccak256\":\"0x7d7e02493b7479c8c1e3382c97cf98bfd3e4b3fce477f89b8f95184dea7700c2\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://47fc9c3b1966fc08710740b909b078d03cb9e36484567e8fb5f05debe8b8c6ab\",\"dweb:/ipfs/QmRu1oXB8bR3BFzv28sQZjTqYGn8KgxJfkc9B4PLaRNTLC\"]},\"src/tokens/ERC20.sol\":{\"keccak256\":\"0x8d662fa38a1129c3f86ae334f646b5db4fe0a0de25d0782d86e275975e3dc75c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ec1d69baa70ce48c6572825ee05242b0dce52bf30db79584aced35bf52fdfc7b\",\"dweb:/ipfs/QmURvFnhBo6EkDR3voSP71vaQzpp8UG57yZRTBQ1TW4s8S\"]},\"src/tokens/WETH.sol\":{\"keccak256\":\"0xfea57f57a3f2c589314a56c59d28805e6cd37f2be0a096fbf5533b9243948eeb\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1252a169ecf65ef52f1b6841957e7a9a17dd0b8cebc97991a0333ca83d2f60fc\",\"dweb:/ipfs/QmV5XUnxvYtMjpB3tvWq6Cy8eavsydgm5wzHdtvyxc8g6Q\"]},\"src/utils/Bytes32AddressLib.sol\":{\"keccak256\":\"0xfb5bb712bde5dea2abe265962189693d568cbddc523be98e06ea47af738fdec6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://98e1daa7fea5a49e62b14a546dc70bd56faf47a0b5ba36230abeae1d1851eee7\",\"dweb:/ipfs/QmVrFUDg6w8XjZ9aVzC1APt8Hodjy2BngncSd5AxX4iLzF\"]},\"src/utils/CREATE3.sol\":{\"keccak256\":\"0xde8f9d78f9cfb4d051e555d6ddfebc90d2a417245928353c10f7319caf532b00\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9e2c2529b86ff8ea025f1f920f4620f090247f0bf1e7c43c73401bbcc5efa99e\",\"dweb:/ipfs/QmSJ3ZV46WdwhwVmSVzp131zPamqE8an6vHBdCr7Yvfdqo\"]},\"src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x7c0075dca9374db749ed3fc781fd901694cf987812e3ef7c464d7df63de3e03a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3a0d446ca143e521697eeefc9406b63de349b472b4b89450cd9f81684eaa5388\",\"dweb:/ipfs/QmUQxTxiqdh6zDw997Jwyr7onEBxZAhgWUcZSqXntc5jSY\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDeployERC20"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "decimals",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDeployERC20"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "bytecode1",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "bytecode2",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFailDoubleDeployDifferentBytecode"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFailDoubleDeployDifferentBytecode"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFailDoubleDeploySameBytecode"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "bytecode",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFailDoubleDeploySameBytecode"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/ds-test/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/test/CREATE3.t.sol": "CREATE3Test"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0xd4cc3f57e7af003954200ec4ee92e8f189885cba55ae9cf87e7a59985d8e963e",
        "urls": [
          "bzz-raw://64df22826aa96e9c9eaebb698f5940ecafe95d72782b60b8f6fd68f6cd023bda",
          "dweb:/ipfs/QmSJGqC4GyyHdMUc2ViatN6wKZNBiaxRzntKH7JwM2UQ8R"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/auth/Auth.sol": {
        "keccak256": "0x2bc7e46ecae8db6dbd482164eb79665c0ebec7f970e442c5ac5cce870248eee6",
        "urls": [
          "bzz-raw://5287312e75838e450390ce1d876f67105de906cf2f908bb58311262a2f51f82a",
          "dweb:/ipfs/QmPsnZHibbDS5VcB2uDz3cEqyRKxKpLs8LPQ7y6vyEWTKL"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/test/CREATE3.t.sol": {
        "keccak256": "0x08df71591729914243ac6245ed81df2627669f102fc0098a145915d02543fca9",
        "urls": [
          "bzz-raw://aa5436b666978743e9fb12a8068f896bbf61f53bff191f46becae7f0d5a57b89",
          "dweb:/ipfs/QmQXX88s2KBm9tv8x3Fx5QX9AvLXL4o5SSqpt3KV85h5kX"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/test/utils/DSTestPlus.sol": {
        "keccak256": "0xe7a7f10c038e784e5b134fa1e1d39f706adc7cf9ac0c3a44d21f6bd298d6235f",
        "urls": [
          "bzz-raw://0ec326fec8aed3ae8f27cf1d811d102f31044a029a1ef8e5a2ee8111408c5316",
          "dweb:/ipfs/QmQLjeMnGHQ6hnn1rfftVZDt1uR7TiwL9DfJRLRgmsV6VX"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/test/utils/Hevm.sol": {
        "keccak256": "0xd4d48a54bd3ce0830b561c487dcbd29f9e3d1988c333b7fd05b44b4e30bc49bb",
        "urls": [
          "bzz-raw://3ed2544d9c41e165221373e60113c948599f95f9e7fcbb31038d52be3324de6f",
          "dweb:/ipfs/QmP8ibmcfcGjdAaxRMYWuLBtLoJgpJ2ykZdUdZrGpKd2jt"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/test/utils/mocks/MockAuthChild.sol": {
        "keccak256": "0x538a251b246d4376a89c56a33039445da25bf43ec34a8f95b66ea04f1e95c101",
        "urls": [
          "bzz-raw://a3337ada538238038497bd3a10ee79b60b1a69fc7f74c2dfddcdcbe62321975c",
          "dweb:/ipfs/QmYPMhh4CvcsLtFRfsTmRLABY2LN3wYsYjaB9qiBEdoPfz"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/test/utils/mocks/MockERC20.sol": {
        "keccak256": "0x7d7e02493b7479c8c1e3382c97cf98bfd3e4b3fce477f89b8f95184dea7700c2",
        "urls": [
          "bzz-raw://47fc9c3b1966fc08710740b909b078d03cb9e36484567e8fb5f05debe8b8c6ab",
          "dweb:/ipfs/QmRu1oXB8bR3BFzv28sQZjTqYGn8KgxJfkc9B4PLaRNTLC"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/tokens/ERC20.sol": {
        "keccak256": "0x8d662fa38a1129c3f86ae334f646b5db4fe0a0de25d0782d86e275975e3dc75c",
        "urls": [
          "bzz-raw://ec1d69baa70ce48c6572825ee05242b0dce52bf30db79584aced35bf52fdfc7b",
          "dweb:/ipfs/QmURvFnhBo6EkDR3voSP71vaQzpp8UG57yZRTBQ1TW4s8S"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/tokens/WETH.sol": {
        "keccak256": "0xfea57f57a3f2c589314a56c59d28805e6cd37f2be0a096fbf5533b9243948eeb",
        "urls": [
          "bzz-raw://1252a169ecf65ef52f1b6841957e7a9a17dd0b8cebc97991a0333ca83d2f60fc",
          "dweb:/ipfs/QmV5XUnxvYtMjpB3tvWq6Cy8eavsydgm5wzHdtvyxc8g6Q"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/utils/Bytes32AddressLib.sol": {
        "keccak256": "0xfb5bb712bde5dea2abe265962189693d568cbddc523be98e06ea47af738fdec6",
        "urls": [
          "bzz-raw://98e1daa7fea5a49e62b14a546dc70bd56faf47a0b5ba36230abeae1d1851eee7",
          "dweb:/ipfs/QmVrFUDg6w8XjZ9aVzC1APt8Hodjy2BngncSd5AxX4iLzF"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/utils/CREATE3.sol": {
        "keccak256": "0xde8f9d78f9cfb4d051e555d6ddfebc90d2a417245928353c10f7319caf532b00",
        "urls": [
          "bzz-raw://9e2c2529b86ff8ea025f1f920f4620f090247f0bf1e7c43c73401bbcc5efa99e",
          "dweb:/ipfs/QmSJ3ZV46WdwhwVmSVzp131zPamqE8an6vHBdCr7Yvfdqo"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/utils/SafeTransferLib.sol": {
        "keccak256": "0x7c0075dca9374db749ed3fc781fd901694cf987812e3ef7c464d7df63de3e03a",
        "urls": [
          "bzz-raw://3a0d446ca143e521697eeefc9406b63de349b472b4b89450cd9f81684eaa5388",
          "dweb:/ipfs/QmUQxTxiqdh6zDw997Jwyr7onEBxZAhgWUcZSqXntc5jSY"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/CREATE3.t.sol",
    "id": 4287,
    "exportedSymbols": {
      "CREATE3": [
        32960
      ],
      "CREATE3Test": [
        4286
      ],
      "DSTestPlus": [
        29583
      ],
      "MockAuthChild": [
        29815
      ],
      "MockERC20": [
        29987
      ],
      "WETH": [
        32809
      ]
    },
    "nodeType": "SourceUnit",
    "src": "43:2403:8",
    "nodes": [
      {
        "id": 4016,
        "nodeType": "PragmaDirective",
        "src": "43:23:8",
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 4018,
        "nodeType": "ImportDirective",
        "src": "70:40:8",
        "absolutePath": "src/tokens/WETH.sol",
        "file": "../tokens/WETH.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4287,
        "sourceUnit": 32810,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4017,
              "name": "WETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32809,
              "src": "78:4:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4020,
        "nodeType": "ImportDirective",
        "src": "112:50:8",
        "absolutePath": "src/test/utils/DSTestPlus.sol",
        "file": "./utils/DSTestPlus.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4287,
        "sourceUnit": 29584,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4019,
              "name": "DSTestPlus",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29583,
              "src": "120:10:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4022,
        "nodeType": "ImportDirective",
        "src": "164:54:8",
        "absolutePath": "src/test/utils/mocks/MockERC20.sol",
        "file": "./utils/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4287,
        "sourceUnit": 29988,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4021,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29987,
              "src": "172:9:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4024,
        "nodeType": "ImportDirective",
        "src": "220:62:8",
        "absolutePath": "src/test/utils/mocks/MockAuthChild.sol",
        "file": "./utils/mocks/MockAuthChild.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4287,
        "sourceUnit": 29816,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4023,
              "name": "MockAuthChild",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29815,
              "src": "228:13:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4026,
        "nodeType": "ImportDirective",
        "src": "286:45:8",
        "absolutePath": "src/utils/CREATE3.sol",
        "file": "../utils/CREATE3.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4287,
        "sourceUnit": 32961,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4025,
              "name": "CREATE3",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32960,
              "src": "294:7:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4286,
        "nodeType": "ContractDefinition",
        "src": "335:2109:8",
        "nodes": [
          {
            "id": 4097,
            "nodeType": "FunctionDefinition",
            "src": "377:548:8",
            "body": {
              "id": 4096,
              "nodeType": "Block",
              "src": "411:514:8",
              "statements": [
                {
                  "assignments": [
                    4032
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4032,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "430:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 4096,
                      "src": "422:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4031,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "422:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4039,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "412073616c7421",
                            "id": 4036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "453:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f66d1c49a6c3a2a06c177c5523de9d8ab86d28aa5e2333d2e48b853e7e28a4a7",
                              "typeString": "literal_string \"A salt!\""
                            },
                            "value": "A salt!"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f66d1c49a6c3a2a06c177c5523de9d8ab86d28aa5e2333d2e48b853e7e28a4a7",
                              "typeString": "literal_string \"A salt!\""
                            }
                          ],
                          "id": 4035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "447:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 4034,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "447:5:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "447:16:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4033,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "437:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 4038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "437:27:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "422:42:8"
                },
                {
                  "assignments": [
                    4042
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4042,
                      "mutability": "mutable",
                      "name": "deployed",
                      "nameLocation": "487:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 4096,
                      "src": "477:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$29987",
                        "typeString": "contract MockERC20"
                      },
                      "typeName": {
                        "id": 4041,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4040,
                          "name": "MockERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29987,
                          "src": "477:9:8"
                        },
                        "referencedDeclaration": 29987,
                        "src": "477:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$29987",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4063,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4046,
                            "name": "salt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4032,
                            "src": "555:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 4050,
                                      "name": "MockERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 29987,
                                      "src": "600:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_MockERC20_$29987_$",
                                        "typeString": "type(contract MockERC20)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_contract$_MockERC20_$29987_$",
                                        "typeString": "type(contract MockERC20)"
                                      }
                                    ],
                                    "id": 4049,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "595:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 4051,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "595:15:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_contract$_MockERC20_$29987",
                                    "typeString": "type(contract MockERC20)"
                                  }
                                },
                                "id": 4052,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "creationCode",
                                "nodeType": "MemberAccess",
                                "src": "595:28:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "4d6f636b20546f6b656e",
                                    "id": 4055,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "636:12:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_eb96b779e2a421c78f42d9b3999c8bc0c7726c66c63accdd9ba94f2ff1357844",
                                      "typeString": "literal_string \"Mock Token\""
                                    },
                                    "value": "Mock Token"
                                  },
                                  {
                                    "hexValue": "4d4f434b",
                                    "id": 4056,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "650:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_68c517c66587983dacbde85dde74f9eb525b7881b1753cee39b9677a9d863af0",
                                      "typeString": "literal_string \"MOCK\""
                                    },
                                    "value": "MOCK"
                                  },
                                  {
                                    "hexValue": "3138",
                                    "id": 4057,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "658:2:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_18_by_1",
                                      "typeString": "int_const 18"
                                    },
                                    "value": "18"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_eb96b779e2a421c78f42d9b3999c8bc0c7726c66c63accdd9ba94f2ff1357844",
                                      "typeString": "literal_string \"Mock Token\""
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_68c517c66587983dacbde85dde74f9eb525b7881b1753cee39b9677a9d863af0",
                                      "typeString": "literal_string \"MOCK\""
                                    },
                                    {
                                      "typeIdentifier": "t_rational_18_by_1",
                                      "typeString": "int_const 18"
                                    }
                                  ],
                                  "expression": {
                                    "id": 4053,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "625:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 4054,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "625:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 4058,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "625:36:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 4047,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "578:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 4048,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "578:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 4059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "578:84:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 4060,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "681:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 4044,
                            "name": "CREATE3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32960,
                            "src": "522:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CREATE3_$32960_$",
                              "typeString": "type(library CREATE3)"
                            }
                          },
                          "id": 4045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deploy",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32920,
                          "src": "522:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (bytes32,bytes memory,uint256) returns (address)"
                          }
                        },
                        "id": 4061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "522:175:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4043,
                      "name": "MockERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29987,
                      "src": "498:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_MockERC20_$29987_$",
                        "typeString": "type(contract MockERC20)"
                      }
                    },
                    "id": 4062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "498:210:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$29987",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "477:231:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4067,
                            "name": "deployed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4042,
                            "src": "738:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$29987",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$29987",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 4066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "730:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4065,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "730:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "730:17:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4071,
                            "name": "salt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4032,
                            "src": "769:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 4069,
                            "name": "CREATE3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32960,
                            "src": "749:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CREATE3_$32960_$",
                              "typeString": "type(library CREATE3)"
                            }
                          },
                          "id": 4070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getDeployed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32959,
                          "src": "749:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view returns (address)"
                          }
                        },
                        "id": 4072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "749:25:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4064,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 320,
                      "src": "721:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 4073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "721:54:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4074,
                  "nodeType": "ExpressionStatement",
                  "src": "721:54:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 4076,
                            "name": "deployed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4042,
                            "src": "797:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$29987",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 4077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31799,
                          "src": "797:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 4078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "797:15:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "4d6f636b20546f6b656e",
                        "id": 4079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "814:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eb96b779e2a421c78f42d9b3999c8bc0c7726c66c63accdd9ba94f2ff1357844",
                          "typeString": "literal_string \"Mock Token\""
                        },
                        "value": "Mock Token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eb96b779e2a421c78f42d9b3999c8bc0c7726c66c63accdd9ba94f2ff1357844",
                          "typeString": "literal_string \"Mock Token\""
                        }
                      ],
                      "id": 4075,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "788:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 4080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "788:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4081,
                  "nodeType": "ExpressionStatement",
                  "src": "788:39:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 4083,
                            "name": "deployed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4042,
                            "src": "847:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$29987",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 4084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31801,
                          "src": "847:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 4085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "847:17:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "4d4f434b",
                        "id": 4086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "866:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68c517c66587983dacbde85dde74f9eb525b7881b1753cee39b9677a9d863af0",
                          "typeString": "literal_string \"MOCK\""
                        },
                        "value": "MOCK"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68c517c66587983dacbde85dde74f9eb525b7881b1753cee39b9677a9d863af0",
                          "typeString": "literal_string \"MOCK\""
                        }
                      ],
                      "id": 4082,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "838:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 4087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "838:35:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4088,
                  "nodeType": "ExpressionStatement",
                  "src": "838:35:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 4090,
                            "name": "deployed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4042,
                            "src": "893:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$29987",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 4091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31803,
                          "src": "893:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 4092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "893:19:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "3138",
                        "id": 4093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "914:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 4089,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "884:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 4094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "884:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4095,
                  "nodeType": "ExpressionStatement",
                  "src": "884:33:8"
                }
              ]
            },
            "functionSelector": "3dbcbb73",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDeployERC20",
            "nameLocation": "386:15:8",
            "parameters": {
              "id": 4029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "401:2:8"
            },
            "returnParameters": {
              "id": 4030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "411:0:8"
            },
            "scope": 4286,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4132,
            "nodeType": "FunctionDefinition",
            "src": "933:251:8",
            "body": {
              "id": 4131,
              "nodeType": "Block",
              "src": "984:200:8",
              "statements": [
                {
                  "assignments": [
                    4101
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4101,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1003:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 4131,
                      "src": "995:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4100,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "995:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4108,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "53616c74792e2e2e",
                            "id": 4105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1026:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7b8edd48646503e35ad861b89c211c3d2d8489e9bd92b4ca33550889f88af863",
                              "typeString": "literal_string \"Salty...\""
                            },
                            "value": "Salty..."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7b8edd48646503e35ad861b89c211c3d2d8489e9bd92b4ca33550889f88af863",
                              "typeString": "literal_string \"Salty...\""
                            }
                          ],
                          "id": 4104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1020:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 4103,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1020:5:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1020:17:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4102,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1010:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 4107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1010:28:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "995:43:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4112,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4101,
                        "src": "1066:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4114,
                              "name": "MockAuthChild",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29815,
                              "src": "1077:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_MockAuthChild_$29815_$",
                                "typeString": "type(contract MockAuthChild)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_MockAuthChild_$29815_$",
                                "typeString": "type(contract MockAuthChild)"
                              }
                            ],
                            "id": 4113,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1072:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 4115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1072:19:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_MockAuthChild_$29815",
                            "typeString": "type(contract MockAuthChild)"
                          }
                        },
                        "id": 4116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "creationCode",
                        "nodeType": "MemberAccess",
                        "src": "1072:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 4117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1106:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 4109,
                        "name": "CREATE3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32960,
                        "src": "1051:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CREATE3_$32960_$",
                          "typeString": "type(library CREATE3)"
                        }
                      },
                      "id": 4111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deploy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32920,
                      "src": "1051:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory,uint256) returns (address)"
                      }
                    },
                    "id": 4118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4119,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:57:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4123,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4101,
                        "src": "1134:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4125,
                              "name": "MockAuthChild",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29815,
                              "src": "1145:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_MockAuthChild_$29815_$",
                                "typeString": "type(contract MockAuthChild)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_MockAuthChild_$29815_$",
                                "typeString": "type(contract MockAuthChild)"
                              }
                            ],
                            "id": 4124,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1140:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 4126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1140:19:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_MockAuthChild_$29815",
                            "typeString": "type(contract MockAuthChild)"
                          }
                        },
                        "id": 4127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "creationCode",
                        "nodeType": "MemberAccess",
                        "src": "1140:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 4128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1174:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 4120,
                        "name": "CREATE3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32960,
                        "src": "1119:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CREATE3_$32960_$",
                          "typeString": "type(library CREATE3)"
                        }
                      },
                      "id": 4122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deploy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32920,
                      "src": "1119:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory,uint256) returns (address)"
                      }
                    },
                    "id": 4129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1119:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4130,
                  "nodeType": "ExpressionStatement",
                  "src": "1119:57:8"
                }
              ]
            },
            "functionSelector": "07841bd4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFailDoubleDeploySameBytecode",
            "nameLocation": "942:32:8",
            "parameters": {
              "id": 4098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "974:2:8"
            },
            "returnParameters": {
              "id": 4099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "984:0:8"
            },
            "scope": 4286,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4167,
            "nodeType": "FunctionDefinition",
            "src": "1192:249:8",
            "body": {
              "id": 4166,
              "nodeType": "Block",
              "src": "1248:193:8",
              "statements": [
                {
                  "assignments": [
                    4136
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4136,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1267:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 4166,
                      "src": "1259:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4135,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1259:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4143,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "616e6420737765657421",
                            "id": 4140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1290:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_1096b45157de7fd9778d004fe5b7230de32adf74d933fd7e6f3ac6d6d819dae7",
                              "typeString": "literal_string \"and sweet!\""
                            },
                            "value": "and sweet!"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_1096b45157de7fd9778d004fe5b7230de32adf74d933fd7e6f3ac6d6d819dae7",
                              "typeString": "literal_string \"and sweet!\""
                            }
                          ],
                          "id": 4139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1284:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 4138,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1284:5:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1284:19:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4137,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1274:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 4142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1274:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1259:45:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4147,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4136,
                        "src": "1332:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4149,
                              "name": "WETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32809,
                              "src": "1343:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_WETH_$32809_$",
                                "typeString": "type(contract WETH)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_WETH_$32809_$",
                                "typeString": "type(contract WETH)"
                              }
                            ],
                            "id": 4148,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1338:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 4150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1338:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_WETH_$32809",
                            "typeString": "type(contract WETH)"
                          }
                        },
                        "id": 4151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "creationCode",
                        "nodeType": "MemberAccess",
                        "src": "1338:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 4152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1363:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 4144,
                        "name": "CREATE3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32960,
                        "src": "1317:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CREATE3_$32960_$",
                          "typeString": "type(library CREATE3)"
                        }
                      },
                      "id": 4146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deploy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32920,
                      "src": "1317:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory,uint256) returns (address)"
                      }
                    },
                    "id": 4153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1317:48:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4154,
                  "nodeType": "ExpressionStatement",
                  "src": "1317:48:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4158,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4136,
                        "src": "1391:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4160,
                              "name": "MockAuthChild",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29815,
                              "src": "1402:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_MockAuthChild_$29815_$",
                                "typeString": "type(contract MockAuthChild)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_MockAuthChild_$29815_$",
                                "typeString": "type(contract MockAuthChild)"
                              }
                            ],
                            "id": 4159,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1397:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 4161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1397:19:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_MockAuthChild_$29815",
                            "typeString": "type(contract MockAuthChild)"
                          }
                        },
                        "id": 4162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "creationCode",
                        "nodeType": "MemberAccess",
                        "src": "1397:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 4163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1431:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 4155,
                        "name": "CREATE3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32960,
                        "src": "1376:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CREATE3_$32960_$",
                          "typeString": "type(library CREATE3)"
                        }
                      },
                      "id": 4157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deploy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32920,
                      "src": "1376:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory,uint256) returns (address)"
                      }
                    },
                    "id": 4164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1376:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4165,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:57:8"
                }
              ]
            },
            "functionSelector": "9258e489",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFailDoubleDeployDifferentBytecode",
            "nameLocation": "1201:37:8",
            "parameters": {
              "id": 4133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1238:2:8"
            },
            "returnParameters": {
              "id": 4134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1248:0:8"
            },
            "scope": 4286,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4235,
            "nodeType": "FunctionDefinition",
            "src": "1449:540:8",
            "body": {
              "id": 4234,
              "nodeType": "Block",
              "src": "1600:389:8",
              "statements": [
                {
                  "assignments": [
                    4180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4180,
                      "mutability": "mutable",
                      "name": "deployed",
                      "nameLocation": "1621:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 4234,
                      "src": "1611:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$29987",
                        "typeString": "contract MockERC20"
                      },
                      "typeName": {
                        "id": 4179,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4178,
                          "name": "MockERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29987,
                          "src": "1611:9:8"
                        },
                        "referencedDeclaration": 29987,
                        "src": "1611:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$29987",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4201,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4184,
                            "name": "salt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4169,
                            "src": "1671:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 4188,
                                      "name": "MockERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 29987,
                                      "src": "1699:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_MockERC20_$29987_$",
                                        "typeString": "type(contract MockERC20)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_contract$_MockERC20_$29987_$",
                                        "typeString": "type(contract MockERC20)"
                                      }
                                    ],
                                    "id": 4187,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "1694:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 4189,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1694:15:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_contract$_MockERC20_$29987",
                                    "typeString": "type(contract MockERC20)"
                                  }
                                },
                                "id": 4190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "creationCode",
                                "nodeType": "MemberAccess",
                                "src": "1694:28:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 4193,
                                    "name": "name",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4171,
                                    "src": "1735:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_calldata_ptr",
                                      "typeString": "string calldata"
                                    }
                                  },
                                  {
                                    "id": 4194,
                                    "name": "symbol",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4173,
                                    "src": "1741:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_calldata_ptr",
                                      "typeString": "string calldata"
                                    }
                                  },
                                  {
                                    "id": 4195,
                                    "name": "decimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4175,
                                    "src": "1749:8:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_calldata_ptr",
                                      "typeString": "string calldata"
                                    },
                                    {
                                      "typeIdentifier": "t_string_calldata_ptr",
                                      "typeString": "string calldata"
                                    },
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "expression": {
                                    "id": 4191,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "1724:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 4192,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "1724:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 4196,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1724:34:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 4185,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1677:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 4186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "1677:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 4197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1677:82:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 4198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1761:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 4182,
                            "name": "CREATE3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32960,
                            "src": "1656:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CREATE3_$32960_$",
                              "typeString": "type(library CREATE3)"
                            }
                          },
                          "id": 4183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deploy",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32920,
                          "src": "1656:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (bytes32,bytes memory,uint256) returns (address)"
                          }
                        },
                        "id": 4199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1656:107:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4181,
                      "name": "MockERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29987,
                      "src": "1632:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_MockERC20_$29987_$",
                        "typeString": "type(contract MockERC20)"
                      }
                    },
                    "id": 4200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1632:142:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$29987",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1611:163:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4205,
                            "name": "deployed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4180,
                            "src": "1804:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$29987",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$29987",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 4204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1796:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4203,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1796:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1796:17:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4209,
                            "name": "salt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4169,
                            "src": "1835:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 4207,
                            "name": "CREATE3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32960,
                            "src": "1815:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CREATE3_$32960_$",
                              "typeString": "type(library CREATE3)"
                            }
                          },
                          "id": 4208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getDeployed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32959,
                          "src": "1815:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view returns (address)"
                          }
                        },
                        "id": 4210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1815:25:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4202,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 320,
                      "src": "1787:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 4211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1787:54:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4212,
                  "nodeType": "ExpressionStatement",
                  "src": "1787:54:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 4214,
                            "name": "deployed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4180,
                            "src": "1863:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$29987",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 4215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31799,
                          "src": "1863:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 4216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1863:15:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4217,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4171,
                        "src": "1880:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 4213,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "1854:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 4218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1854:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4219,
                  "nodeType": "ExpressionStatement",
                  "src": "1854:31:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 4221,
                            "name": "deployed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4180,
                            "src": "1905:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$29987",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 4222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31801,
                          "src": "1905:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 4223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1905:17:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4224,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4173,
                        "src": "1924:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 4220,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "1896:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 4225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1896:35:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4226,
                  "nodeType": "ExpressionStatement",
                  "src": "1896:35:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 4228,
                            "name": "deployed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4180,
                            "src": "1951:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$29987",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 4229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31803,
                          "src": "1951:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 4230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1951:19:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 4231,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4175,
                        "src": "1972:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 4227,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1942:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 4232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1942:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4233,
                  "nodeType": "ExpressionStatement",
                  "src": "1942:39:8"
                }
              ]
            },
            "functionSelector": "4609fe14",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDeployERC20",
            "nameLocation": "1458:15:8",
            "parameters": {
              "id": 4176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4169,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1492:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 4235,
                  "src": "1484:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4168,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1484:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4171,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1523:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 4235,
                  "src": "1507:20:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4170,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1507:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4173,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1554:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 4235,
                  "src": "1538:22:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4172,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1538:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4175,
                  "mutability": "mutable",
                  "name": "decimals",
                  "nameLocation": "1577:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 4235,
                  "src": "1571:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4174,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1571:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1473:119:8"
            },
            "returnParameters": {
              "id": 4177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1600:0:8"
            },
            "scope": 4286,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4259,
            "nodeType": "FunctionDefinition",
            "src": "1997:184:8",
            "body": {
              "id": 4258,
              "nodeType": "Block",
              "src": "2085:96:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4245,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4237,
                        "src": "2111:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 4246,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4239,
                        "src": "2117:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 4247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2127:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 4242,
                        "name": "CREATE3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32960,
                        "src": "2096:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CREATE3_$32960_$",
                          "typeString": "type(library CREATE3)"
                        }
                      },
                      "id": 4244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deploy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32920,
                      "src": "2096:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory,uint256) returns (address)"
                      }
                    },
                    "id": 4248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2096:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4249,
                  "nodeType": "ExpressionStatement",
                  "src": "2096:33:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4253,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4237,
                        "src": "2155:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 4254,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4239,
                        "src": "2161:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 4255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2171:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 4250,
                        "name": "CREATE3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32960,
                        "src": "2140:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CREATE3_$32960_$",
                          "typeString": "type(library CREATE3)"
                        }
                      },
                      "id": 4252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deploy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32920,
                      "src": "2140:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory,uint256) returns (address)"
                      }
                    },
                    "id": 4256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2140:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4257,
                  "nodeType": "ExpressionStatement",
                  "src": "2140:33:8"
                }
              ]
            },
            "functionSelector": "7d942637",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFailDoubleDeploySameBytecode",
            "nameLocation": "2006:32:8",
            "parameters": {
              "id": 4240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4237,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "2047:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 4259,
                  "src": "2039:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4236,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2039:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4239,
                  "mutability": "mutable",
                  "name": "bytecode",
                  "nameLocation": "2068:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 4259,
                  "src": "2053:23:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4238,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2053:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2038:39:8"
            },
            "returnParameters": {
              "id": 4241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2085:0:8"
            },
            "scope": 4286,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4285,
            "nodeType": "FunctionDefinition",
            "src": "2189:252:8",
            "body": {
              "id": 4284,
              "nodeType": "Block",
              "src": "2343:98:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4271,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4261,
                        "src": "2369:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 4272,
                        "name": "bytecode1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4263,
                        "src": "2375:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 4273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2386:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 4268,
                        "name": "CREATE3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32960,
                        "src": "2354:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CREATE3_$32960_$",
                          "typeString": "type(library CREATE3)"
                        }
                      },
                      "id": 4270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deploy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32920,
                      "src": "2354:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory,uint256) returns (address)"
                      }
                    },
                    "id": 4274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2354:34:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4275,
                  "nodeType": "ExpressionStatement",
                  "src": "2354:34:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4279,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4261,
                        "src": "2414:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 4280,
                        "name": "bytecode2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4265,
                        "src": "2420:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 4281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2431:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 4276,
                        "name": "CREATE3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32960,
                        "src": "2399:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CREATE3_$32960_$",
                          "typeString": "type(library CREATE3)"
                        }
                      },
                      "id": 4278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deploy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32920,
                      "src": "2399:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory,uint256) returns (address)"
                      }
                    },
                    "id": 4282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2399:34:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4283,
                  "nodeType": "ExpressionStatement",
                  "src": "2399:34:8"
                }
              ]
            },
            "functionSelector": "2f5ba3b0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFailDoubleDeployDifferentBytecode",
            "nameLocation": "2198:37:8",
            "parameters": {
              "id": 4266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4261,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "2254:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 4285,
                  "src": "2246:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4260,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2246:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4263,
                  "mutability": "mutable",
                  "name": "bytecode1",
                  "nameLocation": "2284:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 4285,
                  "src": "2269:24:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4262,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2269:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4265,
                  "mutability": "mutable",
                  "name": "bytecode2",
                  "nameLocation": "2319:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 4285,
                  "src": "2304:24:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4264,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2304:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2235:100:8"
            },
            "returnParameters": {
              "id": 4267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2343:0:8"
            },
            "scope": 4286,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4027,
              "name": "DSTestPlus",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29583,
              "src": "359:10:8"
            },
            "id": 4028,
            "nodeType": "InheritanceSpecifier",
            "src": "359:10:8"
          }
        ],
        "canonicalName": "CREATE3Test",
        "contractDependencies": [
          29815,
          29987,
          32809
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4286,
          29583,
          1786
        ],
        "name": "CREATE3Test",
        "nameLocation": "344:11:8",
        "scope": 4287,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 8
}